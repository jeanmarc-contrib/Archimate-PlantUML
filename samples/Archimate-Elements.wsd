@startuml
'!pragma layout smetana

!global $ARCH_LOCAL = true
!global $ARCH_DEBUG = false
!global $ARCH_SPECIAL_SHAPES = true
!if ($ARCH_LOCAL == false)
    !include <archimate/Archimate>
    '!theme archimate-alternate from <archimate/themes>
    '!theme archimate-handwriting from <archimate/themes>
    '!theme archimate-lowsaturation from <archimate/themes>
    '!theme archimate-saturated from <archimate/themes>
    '!theme archimate-standard from <archimate/themes>
!else
    ' use these includes for local testing
    !$LOCAL_FOLDER = "../dist/plantuml-stdlib/stdlib/archimate"
    !include $LOCAL_FOLDER/Archimate.puml
    '!theme archimate-alternate from $LOCAL_FOLDER/themes
    '!theme archimate-handwriting from $LOCAL_FOLDER/themes
    '!theme archimate-lowsaturation from $LOCAL_FOLDER/themes
    '!theme archimate-saturated from $LOCAL_FOLDER/themes
    '!theme archimate-standard from $LOCAL_FOLDER/themes
!endif

title Archimate Example - Elements

'LAYOUT_AS_SKETCH()
'LAYOUT_LEFT_RIGHT()
'LAYOUT_TOP_DOWN()
together {
    Boundary(M, "Motivational elements"){
        Motivation_Stakeholder(MS_01, "Stakeholder")
        Motivation_Driver(MD_01, "Driver")
        Motivation_Assessment(MA_01, "Assessment")
        Motivation_Goal(MG_01, "Goal")
        Motivation_Outcome(MO_01, "Outcome")
        Motivation_Principle(MP_01, "Principle")
        Motivation_Requirement(MR_01, "Requirement")
        Motivation_Constraint(MC_01, "Constraint")
        Motivation_Meaning(MM_01, "Meaning")
        Motivation_Value(MV_01, "Value")
    }

    Boundary(S, "Strategy elements"){
        Strategy_Resource(SR_01, "Resource")
        Strategy_Capability(SC_01, "Capability")
        Strategy_ValueStream(SV_01, "Value Stream")
        Strategy_CourseOfAction(SA_01, "Course of Action")
    }
}
Boundary(C, "Core elements") {
    Boundary(B, "Business elements") {
        Business_Actor(BA_01, "Business Actor")
        Business_Role(BR_01, "Business Role")
        Business_Collaboration(BC_01, "Business Collaboration")
        Business_Interface(BI_01, "Business Interface")
        Business_Process(BP_01, "Business Process")
        Business_Function(BF_01, "Business Function")
        Business_Interaction(BIt_01, "Business Interaction")
        Business_Event(BE_01, "Business Event")
        Business_Service(BS_01, "Business Service")
        Business_Object(BO_01, "Business Object")
        Business_Contract(BCt_01, "Contract")
        Business_Representation(BRep_01, "Representation")
        Business_Product(BPr_01, "Product")
        Business_Location(BLoc_01, "Location")
    }
    Boundary(A, "Application elements") {
        Application_Component(AC_01, "Application Component")
        Application_Collaboration(ACol_01, "Application Collaboration")
        Application_Interface(AI_01, "Application Interface")
        Application_Function(AF_01, "Application Function")
        Application_Interaction(AInt_01, "Application Interaction")
        Application_Process(AP_01, "Application Process")
        Application_Event(AE_01, "Application Event")
        Application_Service(AS_01, "Application Service")
        Application_DataObject(AD_01, "Data Object")
    }
    Boundary(T, "Technology elements") {
        Technology_Node(TN_01, "Node")
        Technology_Device(TD_01, "Device")
        Technology_SystemSoftware(TSS_01, "System Software")
        Technology_Collaboration(TC_01, "Technology Collaboration")
        Technology_Interface(TI_01, "Technology Interface")
        Technology_Path(TP_01, "Path")
        Technology_CommunicationNetwork(TCN_01, "Communication Network")
        Technology_Function(TF_01, "Technology Function")
        Technology_Process(TPr_01, "Technology Process")
        Technology_Interaction(TInt_01, "Technology Interaction")
        Technology_Event(TE_01, "Technology Event")
        Technology_Service(TS_01, "Technology Service")
        Technology_Artifact(TA_01, "Artifact")
        Boundary(P, "Physical elements"){
            'Physical Elements
            Physical_Equipment(PE_01, "Equipment")
            Physical_Facility(PF_01, "Facility")
            Physical_DistributionNetwork(PDN_01, "Distribution Network")
            Physical_Material(PM_01, "Material")
        }
    }
}

together {
    Boundary(O, "Other elements"){
        Other_Grouping(a, "Other_Grouping"){
            Other_Location(OL_02, "Location")
        }
        Grouping(G_01, "Grouping") {
            Junction_Or(JO_01, "or")
            Junction_And(JA_01, "and")
        }
        Group(G_02, "Group") {
            Other_Location(OL_01, "Location")
        }
    }

    Boundary(I, "Implementation elements"){
        Implementation_WorkPackage(IWP_01, "Work Package")
        Implementation_Deliverable(ID_01, "Deliverable")
        Implementation_Event(IE_01, "Event")
        Implementation_Plateau(IP_01, "Plateau")
        Implementation_Gap(IG_01, "Gap")
    }
}
'M -[hidden]D------ C
C -[hidden]U--- O
C -[hidden]U--- I
''S -U-- I
'M -[hidden]-- S
@enduml